# Generated by Django 5.0.1 on 2025-09-27 00:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("api", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="IngestionRun",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file_id",
                    models.CharField(help_text="Google Drive file ID", max_length=255),
                ),
                (
                    "filename",
                    models.CharField(help_text="Original filename", max_length=500),
                ),
                (
                    "file_created_time",
                    models.DateTimeField(
                        help_text="When the file was created in Google Drive"
                    ),
                ),
                (
                    "file_modified_time",
                    models.DateTimeField(
                        help_text="When the file was last modified in Google Drive"
                    ),
                ),
                (
                    "data_time",
                    models.DateTimeField(
                        help_text="Extracted data timestamp (from filename or file creation)"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("partial", "Partial Success"),
                        ],
                        default="running",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "sheet_names",
                    models.JSONField(
                        default=list, help_text="Names of sheets processed"
                    ),
                ),
                ("rows_processed", models.PositiveIntegerField(default=0)),
                ("rows_inserted", models.PositiveIntegerField(default=0)),
                ("rows_updated", models.PositiveIntegerField(default=0)),
                ("rows_ignored", models.PositiveIntegerField(default=0)),
                ("rows_quarantined", models.PositiveIntegerField(default=0)),
                ("conflicts_detected", models.PositiveIntegerField(default=0)),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Error message if processing failed",
                        null=True,
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        help_text="Folder being processed",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ingestion_runs",
                        to="api.googledrivefolder",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ingestion Run",
                "verbose_name_plural": "Ingestion Runs",
                "db_table": "api_ingestion_runs",
                "ordering": ["-started_at"],
                "unique_together": {("folder", "file_id")},
            },
        ),
        migrations.CreateModel(
            name="BookingConflict",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booking_number", models.CharField(max_length=50)),
                ("field_name", models.CharField(max_length=100)),
                ("existing_value", models.TextField()),
                ("incoming_value", models.TextField()),
                ("source_file_id", models.CharField(max_length=255)),
                ("detected_at", models.DateTimeField(auto_now_add=True)),
                (
                    "ingestion_run",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conflicts",
                        to="api.ingestionrun",
                    ),
                ),
            ],
            options={
                "verbose_name": "Booking Conflict",
                "verbose_name_plural": "Booking Conflicts",
                "db_table": "api_booking_conflicts",
                "ordering": ["-detected_at"],
            },
        ),
        migrations.CreateModel(
            name="ProcessedFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file_id",
                    models.CharField(
                        help_text="Google Drive file ID", max_length=255, unique=True
                    ),
                ),
                ("filename", models.CharField(max_length=500)),
                ("processed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "folder",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="processed_files",
                        to="api.googledrivefolder",
                    ),
                ),
                (
                    "ingestion_run",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="processed_files",
                        to="api.ingestionrun",
                    ),
                ),
            ],
            options={
                "verbose_name": "Processed File",
                "verbose_name_plural": "Processed Files",
                "db_table": "api_processed_files",
                "ordering": ["-processed_at"],
            },
        ),
        migrations.CreateModel(
            name="QuarantinedRow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_id", models.CharField(max_length=255)),
                ("row_index", models.PositiveIntegerField()),
                ("raw_data", models.JSONField()),
                ("error_message", models.TextField()),
                ("quarantined_at", models.DateTimeField(auto_now_add=True)),
                (
                    "ingestion_run",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quarantined_rows",
                        to="api.ingestionrun",
                    ),
                ),
            ],
            options={
                "verbose_name": "Quarantined Row",
                "verbose_name_plural": "Quarantined Rows",
                "db_table": "api_quarantined_rows",
                "ordering": ["-quarantined_at"],
            },
        ),
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "booking_number",
                    models.CharField(
                        help_text="Booking number (e.g., 214078)",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "booking_date",
                    models.DateField(
                        blank=True, help_text="Date when booking was created", null=True
                    ),
                ),
                (
                    "arrive_date",
                    models.DateField(blank=True, help_text="Arrival date", null=True),
                ),
                (
                    "depart_date",
                    models.DateField(blank=True, help_text="Departure date", null=True),
                ),
                (
                    "original_total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Original total amount at time of booking",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "deposit_required",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Required deposit amount",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        help_text="Booking status (e.g., 'Booking', 'Confirmed', 'Cancelled')",
                        max_length=50,
                    ),
                ),
                (
                    "file_as",
                    models.CharField(
                        blank=True, help_text="File as name", max_length=200
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, help_text="Guest first name", max_length=100
                    ),
                ),
                (
                    "surname",
                    models.CharField(
                        blank=True, help_text="Guest surname", max_length=100
                    ),
                ),
                (
                    "company",
                    models.CharField(
                        blank=True, help_text="Company name", max_length=200
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        blank=True,
                        help_text="Region (e.g., 'QLD', 'NSW')",
                        max_length=100,
                    ),
                ),
                (
                    "portal",
                    models.CharField(
                        blank=True, help_text="Booking portal/source", max_length=100
                    ),
                ),
                (
                    "room_number",
                    models.CharField(
                        blank=True, help_text="Assigned room number", max_length=50
                    ),
                ),
                (
                    "room_type",
                    models.CharField(
                        blank=True, help_text="Room type description", max_length=100
                    ),
                ),
                (
                    "received_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Amount received",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "deposit_due",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Deposit due amount",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "deposit_by_date",
                    models.DateField(
                        blank=True, help_text="Deposit due by date", null=True
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Current total amount",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Outstanding balance",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "agent",
                    models.CharField(
                        blank=True, help_text="Booking agent", max_length=200
                    ),
                ),
                (
                    "agent_ref",
                    models.CharField(
                        blank=True, help_text="Agent reference number", max_length=100
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, help_text="Guest email", max_length=254
                    ),
                ),
                (
                    "mobile",
                    models.CharField(
                        blank=True, help_text="Guest mobile number", max_length=50
                    ),
                ),
                (
                    "car_rego",
                    models.CharField(
                        blank=True, help_text="Car registration", max_length=20
                    ),
                ),
                (
                    "guest_request",
                    models.TextField(blank=True, help_text="Special guest requests"),
                ),
                (
                    "enquiry_status",
                    models.CharField(
                        blank=True, help_text="Enquiry status", max_length=100
                    ),
                ),
                (
                    "primary_source",
                    models.CharField(
                        blank=True, help_text="Primary booking source", max_length=100
                    ),
                ),
                (
                    "black_list",
                    models.BooleanField(
                        default=False, help_text="Whether guest is blacklisted"
                    ),
                ),
                (
                    "rate",
                    models.CharField(
                        blank=True, help_text="Rate description", max_length=200
                    ),
                ),
                (
                    "suburb",
                    models.CharField(
                        blank=True, help_text="Guest suburb", max_length=100
                    ),
                ),
                (
                    "post_code",
                    models.CharField(
                        blank=True, help_text="Guest postcode", max_length=20
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, help_text="Guest state", max_length=50
                    ),
                ),
                (
                    "room_status",
                    models.CharField(
                        blank=True, help_text="Room status", max_length=50
                    ),
                ),
                (
                    "dual_key",
                    models.CharField(
                        blank=True, help_text="Dual key information", max_length=50
                    ),
                ),
                (
                    "pre_auth_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Pre-authorization amount",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "total_pre_auths",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Total pre-authorizations",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "source_file_id",
                    models.CharField(
                        help_text="Google Drive file ID where this data came from",
                        max_length=255,
                    ),
                ),
                (
                    "source_file_time",
                    models.DateTimeField(help_text="Data timestamp from source file"),
                ),
                (
                    "source_row_hash",
                    models.CharField(
                        help_text="Hash of the source row for change detection",
                        max_length=64,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ingestion_run",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookings",
                        to="api.ingestionrun",
                    ),
                ),
            ],
            options={
                "verbose_name": "Booking",
                "verbose_name_plural": "Bookings",
                "db_table": "api_bookings",
                "ordering": ["-booking_number"],
                "indexes": [
                    models.Index(
                        fields=["booking_number"], name="api_booking_booking_09515c_idx"
                    ),
                    models.Index(
                        fields=["arrive_date"], name="api_booking_arrive__7684b8_idx"
                    ),
                    models.Index(
                        fields=["status"], name="api_booking_status_98c217_idx"
                    ),
                    models.Index(
                        fields=["source_file_time"],
                        name="api_booking_source__764c35_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="RawRow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_id", models.CharField(max_length=255)),
                ("row_index", models.PositiveIntegerField()),
                ("row_hash", models.CharField(max_length=64)),
                ("raw_data", models.JSONField()),
                ("processed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "ingestion_run",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="raw_rows",
                        to="api.ingestionrun",
                    ),
                ),
            ],
            options={
                "verbose_name": "Raw Row",
                "verbose_name_plural": "Raw Rows",
                "db_table": "api_raw_rows",
                "ordering": ["-processed_at"],
                "unique_together": {("file_id", "row_index")},
            },
        ),
    ]
