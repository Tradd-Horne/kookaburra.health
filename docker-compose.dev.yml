services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-flowtels_db}
      - POSTGRES_USER=${POSTGRES_USER:-flowtels_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-devpassword}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-flowtels_user} -d ${POSTGRES_DB:-flowtels_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: >
      sh -c "/app/scripts/wait-for-db.sh &&
             python manage.py makemigrations --noinput &&
             python manage.py migrate --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env.dev
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.dev
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    stdin_open: true
    tty: true

  polling:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: python manage.py poll_bookings --interval 300
    volumes:
      - .:/app
    env_file:
      - .env.dev
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.dev
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      db:
        condition: service_healthy
      web:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data_dev: